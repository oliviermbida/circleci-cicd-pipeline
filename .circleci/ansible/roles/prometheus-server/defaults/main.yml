---
prometheus_config_dir: /etc/prometheus
prometheus_db_dir: /var/lib/prometheus
prometheus_binary_local_dir: /usr/local/bin
prometheus_config_file: 'prometheus.yml.j2'
prometheus_web_listen_address: "0.0.0.0:9090"
prometheus_storage_retention: "15d"
prometheus_storage_retention_size: "5GB"
prometheus_read_only_dirs: []
# prometheus_alert_rules_files:
#   - prometheus/rules/*.rules
# prometheus_web_external_url: ''
# prometheus_web_config:
#   tls_server_config: {}
#   http_server_config: {}
#   basic_auth_users: {}
prometheus_global:
  scrape_interval: 1s
  # scrape_timeout: 10s
  evaluation_interval: 1s
prometheus_targets:
  node:
  - targets:
    - "{{ node_target }}:9100"
prometheus_scrape_configs:
  - job_name: "ec2_node"
    # metrics_path: "{{ prometheus_metrics_path }}"
    ec2_sd_configs:
      - region: "{{ lookup('ansible.builtin.env', 'AWS_DEFAULT_REGION') }}"
        access_key: "{{ lookup('ansible.builtin.env', 'AWS_ACCESS_KEY_ID') }}"
        secret_key: "{{ lookup('ansible.builtin.env', 'AWS_SECRET_ACCESS_KEY') }}"
        port: 9100
        filters:
          - name: tag:Name
            values:
              # - "prometheus-{{ resource_id }}"
              - "backend-{{ resource_id }}"
    relabel_configs:
      - source_labels: [__meta_ec2_public_dns_name]
        replacement: '${1}:9100'
        target_label: __address__
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
  - job_name: "prometheus"
    metrics_path: "/metrics" #"{{ prometheus_metrics_path }}"
    static_configs:
      - targets:
          - "{{ prometheus_target }}:9090"
  - job_name: "node"
    file_sd_configs:
      - files:
          - "{{ prometheus_config_dir }}/file_sd/node.yml"
prometheus_alertmanager_config:
  - scheme: https
    path_prefix: alertmanager/
    basic_auth:
      username: 
      password: 
    static_configs:
      - targets: ["localhost:9093", "0.0.0.0:9094"]
    # proxy_url: "127.0.0.2"

prometheus_alert_rules:
  - alert: Watchdog
    expr: vector(1)
    for: 10m
    labels:
      severity: warning
    annotations:
      description: "This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty."
      summary: 'Ensure entire alerting pipeline is functional'
  - alert: InstanceDown
    expr: 'up == 0'
    for: 0m
    labels:
      severity: critical
    annotations:
      description: '{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.{% endraw %}'
      summary: '{% raw %}Instance {{ $labels.instance }} down{% endraw %}'
  - alert: RebootRequired
    expr: 'node_reboot_required > 0'
    labels:
      severity: warning
    annotations:
      description: "{% raw %}{{ $labels.instance }} requires a reboot.{% endraw %}"
      summary: '{% raw %}Instance {{ $labels.instance }} - reboot required{% endraw %}'
  - alert: NodeFilesystemSpaceFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up.{% endraw %}'
      summary: 'Filesystem is predicted to run out of space within the next 24 hours.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeExporterJobMissing
    expr: 'absent(up{job="node"})'
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus node exporter job missing (instance {{ $labels.instance }}){% endraw %}'
      description: "{% raw %}A Prometheus AlertManager job has disappeared\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
  - alert: BackendLowMemory
    expr: 'node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10'
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Backend low memory (instance {{ $labels.instance }}){% endraw %}'
      description: "{% raw %}Backend memory is filling up (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
  - alert: BackendHighCpuLoad
    expr: '100 - (avg by(instance) (rate(node_cpu_seconds_total{job="node",mode="idle"}[2m])) * 100) > 80'
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Backend high CPU load (instance {{ $labels.instance }}){% endraw %}'
      description: "{% raw %}Backend CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
  - alert: BackendNetworkReceiveErrors
    expr: 'rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01'
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Backend Network Receive Errors (instance {{ $labels.instance }}){% endraw %}'
      description: "{% raw %}Backend {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
  - alert: BackendNetworkTransmitErrors
    expr: 'rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01'
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Backend Network Transmit Errors (instance {{ $labels.instance }}){% endraw %}'
      description: "{% raw %}Backend {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"



